conda create -n cookit python=3.7

conda activate cookit

Delete peewee-db-evolve==3.7.0 from requirements.txt during the first installation. Because of how peewee-db-evolve created it's build process, we would first need to delete it.

pip install -r requirements.txt

Now add peewee-db-evolve==3.7.0 back into requirements.txt

pip install -r requirements.txt

If you're having trouble installing dependencies

Remove certifi==2018.11.29 from requirements.txt
If you're having trouble starting flask

Restart your terminal as well and reactivate conda source
Create a .env file at the root of the directory

This project uses python-dotenv. When running commands using flask, environment variables from .env are automatically loaded.

When executing python scripts directly e.g. python start.py, environment variables are not loaded and will not work except python migrate.py (read the script - migrate.py to know why it would load the environment variables .env)

Minimum environment variables that needs to be set

FLASK_APP='start' # based on the name of our entry point script
FLASK_ENV='development' # use this in development, otherwise 'production' or 'test'
DATABASE_URL="postgres://localhost:5432/nextagram_dev"
SECRET_KEY= #generate your own key
Use os.urandom(32) to generate a random secret key and paste that in .env. It's important to keep this SECRET_KEY private.

Since this app uses Pooled Connections, you may also want to set:

DB_TIMEOUT=300 # 5 minutes
DB_POOL=5
(see database.py)

Create a Database

this application is configured to use Postgresql
createdb nextagram_dev
*if you name your database something else, tweak the settings in .env

Ignoring Files from Git

Before git commiting, remember to ignore key files. Here's an example of .gitignore

.vscode
*.DS_Store
*__pycache__
*.env
Database Migrations
python migrate.py
*this template is configured to use Peewee's PooledConnection, however, migrations using Peewee-DB-Evolve doesn't work well. A hack was used to not use PooledConnection when running migration. Pending investigation. There are no known side effects to run this template in production.

Starting Server
flask run
Starting Shell
flask shell
Deploying to Production
ensure environment variables are configured appropriately
migrations will not run in interactive mode when FLASK_ENV is set to 'production'
It's important to set your own SECRET_KEY environment variable and keep that private.

-------------------------------------------------------------------------------------------------------
FLASK_APP='start' # based on the name of our entry point script
FLASK_ENV='development' # use this in development, otherwise 'production' or 'test'
DATABASE_URL="postgres://localhost:5432/cookit_dev"
SECRET_KEY=b'\x8fe\xbd\x96*\x0f\xb02wg\x12\xd6\x0c=\xd8e$\xa13\x84n\xf7\xca\xd3\n\xa0q\x8a\x82\xebb\x8f'